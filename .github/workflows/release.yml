name: Release

on:
  push:
    tags:
      - "v*"

env:
  FLUTTER_VERSION: "3.32.8"

jobs:
  release:
    name: Create Release & Publish
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Get tag version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            VERSION="${{ steps.get_version.outputs.version }}"
            awk "/^## \[$VERSION\]/{flag=1;next}/^## \[/{flag=0}flag" CHANGELOG.md > release_notes.md || echo "Release $VERSION" > release_notes.md
          else
            echo "Release ${{ steps.get_version.outputs.version }}" > release_notes.md
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Publish to pub.dev
        uses: k-paxian/dart-package-publisher@v1.6
        with:
          credentialJson: ${{ secrets.CREDENTIAL_JSON }}
          flutter: true
          skipTests: true
          distribution: "zulu"
          java-version: "17"

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 📦 Get example dependencies
        working-directory: example
        run: flutter pub get

      - name: 🏗️ Build example APK
        working-directory: example
        run: flutter build apk --release

      - name: 📤 Upload APK to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: example/build/app/outputs/flutter-apk/app-release.apk
          asset_name: weight_scale_example_${{ needs.create_release.outputs.tag_name }}.apk
          asset_content_type: application/vnd.android.package-archive

  # 📦 Publish to pub.dev
  publish:
    name: 📦 Publish to pub.dev
    runs-on: ubuntu-latest
    needs: [create_release, build_assets]
    environment: production

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🧪 Run tests before publish
        run: flutter test

      - name: 📋 Validate package
        run: dart pub publish --dry-run

      - name: 🚀 Publish to pub.dev
        env:
          PUB_TOKEN: ${{ secrets.PUB_CREDENTIALS }}
        run: |
          if [ -n "$PUB_TOKEN" ]; then
            echo "$PUB_TOKEN" > ~/.pub-cache/credentials.json
            dart pub publish --force
          else
            echo "PUB_CREDENTIALS not set, skipping publish"
          fi

  # 📢 Post-Release Actions
  post_release:
    name: 📢 Post-Release Actions
    runs-on: ubuntu-latest
    needs: [create_release, publish]
    if: success()

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 📊 Update badges
        run: |
          echo "🎉 Release ${{ needs.create_release.outputs.tag_name }} published successfully!"
          echo "📦 Available on pub.dev: https://pub.dev/packages/weight_scale"
          echo "📱 Example APK available in GitHub Releases"

      - name: 🐦 Tweet about release (optional)
        if: false # Enable when you have Twitter integration
        run: |
          echo "Would tweet: 🎉 Weight Scale Plugin ${{ needs.create_release.outputs.tag_name }} is now available!"
