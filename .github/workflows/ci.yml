name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.32.8"

jobs:
  # 🔍 Static Analysis & Formatting
  analysis:
    name: 📊 Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🎨 Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: 🔍 Run analyzer
        run: flutter analyze --fatal-infos

      - name: 📋 Check pub publish
        run: dart pub publish --dry-run

  # 🧪 Unit Tests
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: analysis

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🧪 Run unit tests
        run: flutter test --coverage --reporter expanded

      - name: 📊 Upload coverage to Codecov
        if: env.CODECOV_TOKEN
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # 🏗️ Build Example App
  build:
    name: 🏗️ Build Example
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: test

    strategy:
      matrix:
        include:
          - platform: android
            build-cmd: flutter build apk --debug
            artifact-path: example/build/app/outputs/flutter-apk/app-debug.apk

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 📦 Get example dependencies
        working-directory: example
        run: flutter pub get

      - name: 🏗️ Build ${{ matrix.platform }}
        working-directory: example
        run: ${{ matrix.build-cmd }}

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: ${{ matrix.artifact-path }}
          retention-days: 7

  # 🔗 Integration Tests
  integration_test:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: analysis

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 📦 Get example dependencies
        working-directory: example
        run: flutter pub get

      - name: 🔗 Run integration tests
        working-directory: example
        run: |
          flutter test integration_test/ --device-id emulator || true
          echo "Integration tests completed (may fail without physical device)"

  # 🏆 Success Check
  ci_success:
    name: ✅ CI Success
    runs-on: ubuntu-latest
    needs: [analysis, test, build]
    if: always()

    steps:
      - name: ✅ Check all jobs
        run: |
          if [ "${{ needs.analysis.result }}" != "success" ] || 
             [ "${{ needs.test.result }}" != "success" ] || 
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ One or more jobs failed"
            exit 1
          else
            echo "✅ All jobs passed successfully!"
          fi
